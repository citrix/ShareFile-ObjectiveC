//
//  SFIRemoteUploadsEntity.m
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFIHttpMethodConstants.h"
#import "SFIEntityConstants.h"
#import "SFIRemoteUploadsEntity.h"
#import "SFIODataEntityBase.h"
#import "SFIRemoteUpload.h"
#import "SFIRemoteUploadRequestParams.h"
#import "SFIUploadSpecification.h"
#import "SFIContact.h"
#import "SFIUser.h"


@implementation SFIRemoteUploadsEntity
-(SFApiQuery*)get
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRemoteUpload class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getPublic
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRemoteUpload class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery setAction:@"Public"];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRemoteUpload class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)upload2WithUrl:(NSURL*)url uploadParams:(SFIRemoteUploadRequestParams*)uploadParams userId:(NSString*)userId andExpirationDays:(NSNumber*)expirationDays
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUploadSpecification class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery setAction:@"Upload2"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"userId" withValue:userId];
	[sfApiQuery addQueryString:@"expirationDays" withValue:expirationDays];
	[sfApiQuery setBody:uploadParams];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)createWithRemoteUpload:(SFIRemoteUpload*)remoteUpload
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRemoteUpload class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery setBody:remoteUpload];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)updateWithRemoteUpload:(SFIRemoteUpload*)remoteUpload
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRemoteUpload class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery setBody:remoteUpload];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)deleteWithId:(NSString*)Id
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery addQueryString:@"Id" withValue:Id];
	[sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
	return sfApiQuery;
}

-(SFApiQuery*)getUsers
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIContact class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery setAction:@"Users"];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)validateRemoteUploadUserWithId:(NSString*)Id andEmail:(NSString*)email
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_RemoteUploads];
	[sfApiQuery setAction:@"ValidateRemoteUploadUser"];
	[sfApiQuery addQueryString:@"Id" withValue:Id];
	[sfApiQuery addQueryString:@"email" withValue:email];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

@end
