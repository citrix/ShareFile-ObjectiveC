//
//  SFIAccountsEntity.m
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFIHttpMethodConstants.h"
#import "SFIEntityConstants.h"
#import "SFIAccountsEntity.h"
#import "SFIODataEntityBase.h"
#import "SFIAccount.h"
#import "SFIContact.h"
#import "SFIMobileSecuritySettings.h"
#import "SFIProductDefaults.h"
#import "SFIAccountPreferences.h"
#import "SFISSOAccountProvider.h"
#import "SFIODataObject.h"
#import "SFIAccessControlDomains.h"
#import "SFIRequireWebPopResult.h"
#import "SFIRequireSubdomainResult.h"
#import "SFIFindSubdomainParams.h"
#import "SFIFindSubdomainResult.h"
#import "SFIOutlookInformation.h"
#import "SFISSOInfo.h"
#import "SFIZone.h"


@implementation SFIAccountsEntity
- (SFApiQuery *)getWithId:(NSString *)Id {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccount class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery addQueryString:@"Id" withValue:Id];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getBranding {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccount class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Branding"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)updateBrandingWithAccount:(SFIAccount *)account {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccount class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Branding"];
    [sfApiQuery setBody:account];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)getEmployees {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIContact class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Employees"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getClients {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIContact class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Clients"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getAddressBookWithType:(NSString *)type andSearchTerm:(NSString *)searchTerm {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIContact class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"AddressBook"];
    [sfApiQuery addQueryString:@"type" withValue:type];
    [sfApiQuery addQueryString:@"searchTerm" withValue:searchTerm];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getMobileSecuritySettings {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIMobileSecuritySettings class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"MobileSecuritySettings"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getProductDefaults {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIProductDefaults class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"ProductDefaults"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getPreferences {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccountPreferences class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Preferences"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getSSOWithProvider:(NSString *)provider andIdpEntityId:(NSString *)idpEntityId {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFISSOAccountProvider class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"SSO"];
    [sfApiQuery addQueryString:@"provider" withValue:provider];
    [sfApiQuery addQueryString:@"idpEntityId" withValue:idpEntityId];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)updateSSOWithSso:(SFISSOAccountProvider *)sso andProvider:(NSString *)provider {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFISSOAccountProvider class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"SSO"];
    [sfApiQuery addQueryString:@"provider" withValue:provider];
    [sfApiQuery setBody:sso];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)getByUserWithParameters:(SFIODataObject *)parameters username:(NSString *)username employeesonly:(NSNumber *)employeesonly requirehomefolders:(NSNumber *)requirehomefolders andSingleplane:(NSNumber *)singleplane {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccount class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"GetByUser"];
    [parameters setProperties:@{
         @"username" : username,
         @"employeesonly" : employeesonly,
         @"requirehomefolders" : requirehomefolders,
         @"singleplane" : singleplane,
     }];
    [sfApiQuery setBody:parameters];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)sendToEmailWithEmail:(NSString *)email {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"SendToEmail"];
    [sfApiQuery addQueryString:@"email" withValue:email];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)getLoginAccessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccessControlDomains class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"LoginAccessControlDomains"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getFolderAccessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccessControlDomains class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"FolderAccessControlDomains"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createLoginAccessControlDomainsWithAccessControlDomains:(SFIAccessControlDomains *)accessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccessControlDomains class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"LoginAccessControlDomains"];
    [sfApiQuery setBody:accessControlDomains];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)createFolderAccessControlDomainsWithAccessControlDomains:(SFIAccessControlDomains *)accessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccessControlDomains class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"FolderAccessControlDomains"];
    [sfApiQuery setBody:accessControlDomains];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)updateLoginAccessControlDomainsWithAccessControlDomains:(SFIAccessControlDomains *)accessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccessControlDomains class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"LoginAccessControlDomains"];
    [sfApiQuery setBody:accessControlDomains];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)updateFolderAccessControlDomainsWithAccessControlDomains:(SFIAccessControlDomains *)accessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccessControlDomains class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"FolderAccessControlDomains"];
    [sfApiQuery setBody:accessControlDomains];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)deleteLoginAccessControlDomainsWithAccessControlDomains:(SFIAccessControlDomains *)accessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"LoginAccessControlDomains"];
    [sfApiQuery setBody:accessControlDomains];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)deleteFolderAccessControlDomainsWithAccessControlDomains:(SFIAccessControlDomains *)accessControlDomains {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"FolderAccessControlDomains"];
    [sfApiQuery setBody:accessControlDomains];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)requireWebPopWithSubdomain:(NSString *)subdomain username:(NSString *)username andSinglePlane:(NSNumber *)singlePlane {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIRequireWebPopResult class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"RequireWebPop"];
    [sfApiQuery addQueryString:@"subdomain" withValue:subdomain];
    [sfApiQuery addQueryString:@"username" withValue:username];
    [sfApiQuery addQueryString:@"singlePlane" withValue:singlePlane];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)requireSubdomainForUsername:(NSString *)username andSinglePlane:(NSNumber *)singlePlane {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIRequireSubdomainResult class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"RequireSubdomain"];
    [sfApiQuery addQueryString:@"username" withValue:username];
    [sfApiQuery addQueryString:@"singlePlane" withValue:singlePlane];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)findSubdomainWithFindSubdomainParams:(SFIFindSubdomainParams *)findSubdomainParams andSinglePlane:(NSNumber *)singlePlane {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIFindSubdomainResult class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"FindSubdomain"];
    [sfApiQuery addQueryString:@"singlePlane" withValue:singlePlane];
    [sfApiQuery setBody:findSubdomainParams];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)getOutlookInformation {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIOutlookInformation class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"OutlookInformation"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getSSOInfoWithSubdomain:(NSString *)subdomain {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFISSOInfo class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"SSOInfo"];
    [sfApiQuery addQueryString:@"subdomain" withValue:subdomain];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getTenants {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccount class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Tenants"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getTenantsWithId:(NSString *)Id {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIAccount class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Tenants"];
    [sfApiQuery addActionIds:Id];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getZonesWithParentid:(NSString *)parentid {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIZone class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Accounts];
    [sfApiQuery setAction:@"Tenants"];
    [sfApiQuery addActionIds:parentid];
    [sfApiQuery addSubAction:@"Zones"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

@end
