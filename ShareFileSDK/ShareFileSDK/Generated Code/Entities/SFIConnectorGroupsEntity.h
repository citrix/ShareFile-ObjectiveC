//
//  SFIConnectorGroupsEntity.h
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFIODataEntityBase.h"

@class SFIConnectorGroup;
@class SFIConnectorGroupZone;
@class SFIConnectorGroupAccessControl;
@class SFIStorageCenter;

@interface SFIConnectorGroupsEntity : SFIODataEntityBase
{
}
- (SFApiQuery *)get;

/**
   @abstract Get all Connector Groups in the account
   Retrieves a Connector Group
   @param serviceid
   @return A single ConnectorGroup object matching the query
 */
- (SFApiQuery *)getWithUrl:(NSURL *)url;

/**
   @abstract Get the Connector Group by Provider
   
   @param provider
   @return A single ConnectorGroup matching the query
 */
- (SFApiQuery *)byProviderWithProvider:(NSString *)provider;

/**
   @abstract Get the Connector Group by Service ID
   Retrieves a Connector Group
   @param id
   @return A single ConnectorGroup object matching the query
 */
- (SFApiQuery *)getZonesWithUrl:(NSURL *)url andId:(NSString *)Id;

/**
   @abstract Get an Access Control element
   Retrieves a Connector Group Access Control of a given user
   @param parentUrl
   @param id
   @return A single ConnectorGroup ACL object matching the query
 */
- (SFApiQuery *)getAccessControlsWithParentUrl:(NSURL *)parentUrl andId:(NSString *)Id;

/**
   @abstract Get Connector Groups in a Zone
   Retrieves the Connector Groups defined in a Zone.
   @param zoneid
   @return Access Control List of the given object ID.
 */
- (SFApiQuery *)getByZoneWithZoneid:(NSString *)zoneid;

/**
   @abstract Create a Connector Group associated with a Zone
   @description
   {
   "Zones":[
   "Zone": {"Id":"ZoneId"},
   "StorageCenter": [ { "Id":"StorageCenterId" }, { ... } ],
   "ApiVersionMin":"v3",
   "ApiVersionMax":"v3",
   "IconUrl":"https://domain/icons",
   "FormUrl":"https://domain/forms"
   ],
   "Id":"ServiceId",
   "Name":""Name,
   "Provider":"svc"
   }
   Creates a new Connector Group, or adds a Zone to an existing Connector Group if the Group is already associatedwith another Zone. The caller doesn't have to check if the group exists or not - just call this API passingthe Service ID and the associated Zone information.
   @param id
   @param connectorGroup
   @return the created or modified AccessControl instance
 */
- (SFApiQuery *)createWithConnectorGroup:(SFIConnectorGroup *)connectorGroup;

/**
   @abstract Associates a Zone to an existing Connecto Group
   @description
   {
   "Zone": {"Id":"ZoneId"},
   "StorageCenter": [ { "Id":"StorageCenterId" }, { ... } ],
   "ApiVersionMin":"v3",
   "ApiVersionMax":"v3",
   "IconUrl":"https://domain/icons",
   "FormUrl":"https://domain/forms"
   }
   Adds a Zone to an existing Connector Group.
   @param id
   @param connectorGroupZone
   @return the created or modified AccessControl instance
 */
- (SFApiQuery *)createZonesWithUrl:(NSURL *)url andConnectorGroupZone:(SFIConnectorGroupZone *)connectorGroupZone;

/**
   @abstract Adds a new principal to the Connector Group Access Control List
   @description
   {
   "Principal": {"Id":"PrincipalId"},
   "CanCreate":"true",
   "CanManage":"true"
   }
   
   @param id
   @param connectorGroupAcl
   @return The created access control list object
 */
- (SFApiQuery *)createAccessControlsWithUrl:(NSURL *)url andConnectorGroupAcl:(SFIConnectorGroupAccessControl *)connectorGroupAcl;

/**
   @abstract Modifies the parameters of a Connector Group in associated with a Zone
   @description
   {
   "Zone": {"Id":"ZoneId"},
   "ApiVersionMin":"v3",
   "ApiVersionMax":"v3",
   "IconUrl":"https://domain/icons",
   "FormUrl":"https://domain/forms"
   }
   
   @param id
   @param zoneId
   @param connectorGroupZone
   @return the created or modified AccessControl instance
 */
- (SFApiQuery *)updateZonesWithUrl:(NSURL *)url zoneId:(NSString *)zoneId andConnectorGroupZone:(SFIConnectorGroupZone *)connectorGroupZone;

/**
   @abstract Removes a Connector Group
   Removes a Connector Group and all associations from Zones
   @param id
 */
- (SFApiQuery *)deleteWithUrl:(NSURL *)url;

/**
   @abstract Removes a Connector Group association with a Zone
   Removes a Connector Group association with a Zone. Connector Groups are automatically removedonce the groups is removed from all the Zones.
   @param serviceUrl
   @param zoneid
 */
- (SFApiQuery *)deleteZonesWithServiceUrl:(NSURL *)serviceUrl andZoneid:(NSString *)zoneid;

/**
   @abstract Removes a Connector Group Access Control object
   Removes an Access Control object from the Connector Group ACL. This removes the permissions ofthe affected principal to use the Connector Group.
   @param serviceUrl
   @param zoneid
 */
- (SFApiQuery *)deleteAccessControlsWithServiceUrl:(NSURL *)serviceUrl andZoneid:(NSString *)zoneid;

/**
   @abstract Retrieve the list of Storage Centers associated with a Connector Group
   Retrieve the list of storage centers associated with a Connector Group.
   @param id
   @param zoneid
   @return The modified Connector Group
 */
- (SFApiQuery *)getStorageCentersWithUrl:(NSURL *)url andZoneid:(NSString *)zoneid;

/**
   @abstract Adds a Connector Group to a Storage Center
   @description
   {
   "Id":"storageCenterId"
   }
   Associate a Connector Group with a Storage Center. The Connector Group has to beassociated with the Storage Center Zone.
   @param id
   @param zoneid
   @return The modified Connector Group
 */
- (SFApiQuery *)createStorageCentersWithUrl:(NSURL *)url zoneid:(NSString *)zoneid andStorageCenter:(SFIStorageCenter *)storageCenter;
@end
