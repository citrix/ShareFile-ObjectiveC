//
//  SFIConnectorGroupsEntity.m
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFIHttpMethodConstants.h"
#import "SFIEntityConstants.h"
#import "SFIConnectorGroupsEntity.h"
#import "SFIODataEntityBase.h"
#import "SFIConnectorGroup.h"
#import "SFIConnectorGroupZone.h"
#import "SFIConnectorGroupAccessControl.h"
#import "SFIStorageCenter.h"


@implementation SFIConnectorGroupsEntity
- (SFApiQuery *)get {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroup class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getWithUrl:(NSURL *)url {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroup class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery addIds:url];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)byProviderWithProvider:(NSString *)provider {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroup class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"ByProvider"];
    [sfApiQuery addQueryString:@"provider" withValue:provider];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getZonesWithUrl:(NSURL *)url andId:(NSString *)Id {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroupZone class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"Zones"];
    [sfApiQuery addIds:url];
    [sfApiQuery addActionIds:Id];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getAccessControlsWithParentUrl:(NSURL *)parentUrl andId:(NSString *)Id {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroupAccessControl class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"AccessControls"];
    [sfApiQuery addIds:parentUrl];
    [sfApiQuery addActionIds:Id];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getByZoneWithZoneid:(NSString *)zoneid {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroup class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"GetByZone"];
    [sfApiQuery addActionIds:zoneid];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createWithConnectorGroup:(SFIConnectorGroup *)connectorGroup {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroup class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setBody:connectorGroup];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)createZonesWithUrl:(NSURL *)url andConnectorGroupZone:(SFIConnectorGroupZone *)connectorGroupZone {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroupZone class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"Zones"];
    [sfApiQuery addIds:url];
    [sfApiQuery setBody:connectorGroupZone];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)createAccessControlsWithUrl:(NSURL *)url andConnectorGroupAcl:(SFIConnectorGroupAccessControl *)connectorGroupAcl {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroupAccessControl class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"AccessControls"];
    [sfApiQuery addIds:url];
    [sfApiQuery setBody:connectorGroupAcl];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)updateZonesWithUrl:(NSURL *)url zoneId:(NSString *)zoneId andConnectorGroupZone:(SFIConnectorGroupZone *)connectorGroupZone {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIConnectorGroupZone class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"Zones"];
    [sfApiQuery addIds:url];
    [sfApiQuery addActionIds:zoneId];
    [sfApiQuery setBody:connectorGroupZone];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)deleteWithUrl:(NSURL *)url {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery addIds:url];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)deleteZonesWithServiceUrl:(NSURL *)serviceUrl andZoneid:(NSString *)zoneid {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"Zones"];
    [sfApiQuery addIds:serviceUrl];
    [sfApiQuery addActionIds:zoneid];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)deleteAccessControlsWithServiceUrl:(NSURL *)serviceUrl andZoneid:(NSString *)zoneid {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"AccessControls"];
    [sfApiQuery addIds:serviceUrl];
    [sfApiQuery addActionIds:zoneid];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)getStorageCentersWithUrl:(NSURL *)url andZoneid:(NSString *)zoneid {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIStorageCenter class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"Zones"];
    [sfApiQuery addIds:url];
    [sfApiQuery addActionIds:zoneid];
    [sfApiQuery addSubAction:@"StorageCenters"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createStorageCentersWithUrl:(NSURL *)url zoneid:(NSString *)zoneid andStorageCenter:(SFIStorageCenter *)storageCenter {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFIStorageCenter class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_ConnectorGroups];
    [sfApiQuery setAction:@"Zones"];
    [sfApiQuery addIds:url];
    [sfApiQuery addActionIds:zoneid];
    [sfApiQuery addSubAction:@"StorageCenters"];
    [sfApiQuery setBody:storageCenter];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

@end
