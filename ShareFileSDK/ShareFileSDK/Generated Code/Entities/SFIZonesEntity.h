//
//  SFIZonesEntity.h
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFIODataEntityBase.h"

@class SFIZone;

@interface SFIZonesEntity : SFIODataEntityBase
{
}

/**
   @abstract Get List of Zones
   Retrieve the list of Zones accessible to the authenticated userThis method will concatenate the list of private zones in the user's account and thelist of public zones accessible to this account. Any user can see the list of zones.
   @param services
   @param includeDisabled
   @return The list of public and private zones accessible to this user
 */
- (SFApiQuery *)getWithServices:(NSString *)services andIncludeDisabled:(NSNumber *)includeDisabled;

/**
   @abstract Get List of Zones
   Retrieve the list of Zones accessible to the authenticated userThis method will concatenate the list of private zones in the user's account and thelist of public zones accessible to this account. Any user can see the list of zones.
   @param services
   @param includeDisabled
   @return The list of public and private zones accessible to this user
 */
- (SFApiQuery *)getWithUrl:(NSURL *)url andSecret:(NSNumber *)secret;

/**
   @abstract Create Zone
   @description
   {
   "Name":"Name",
   "HeartbeatTolerance":10,
   "ZoneServices":"StorageZone, SharepointConnector, NetworkShareConnector"
   }
   Creates a new Zone.@return the created zone
 */
- (SFApiQuery *)createWithZone:(SFIZone *)zone;

/**
   @abstract Update Zone
   @description
   {
   "Name":"Name",
   "HeartbeatTolerance":10,
   "ZoneServices":"StorageZone, SharepointConnector, NetworkShareConnector"
   }
   Updates an existing zone
   @param id
   @param zone
   @return The modified zone
 */
- (SFApiQuery *)updateWithUrl:(NSURL *)url andZone:(SFIZone *)zone;
- (SFApiQuery *)deleteWithUrl:(NSURL *)url force:(NSNumber *)force andNewDefaultZoneId:(NSString *)newDefaultZoneId;

/**
   @abstract Reset Zone Secret
   Resets the current Zone Secret to a new Random valueCaution! This Call will invalidate all Storage Center communications until the Storage Center Zone secretis also updated.User must be a Zone admin to perform this action
   @param id
   @return The modified Zone object
 */
- (SFApiQuery *)resetSecretWithUrl:(NSURL *)url;

/**
   @abstract Get the tenants of a multi-tenant zone
   
   @param parentUrl
   @return List of tenant accounts, not including the zone admin account.
 */
- (SFApiQuery *)getTenantsWithParentUrl:(NSURL *)parentUrl;

/**
   @abstract Add a tenant account to a multi-tenant zone
   
   @param parentUrl
   @param accountId
 */
- (SFApiQuery *)createTenantsWithParentUrl:(NSURL *)parentUrl andAccountId:(NSString *)accountId;

/**
   @abstract Remove a tenant from a multi-tenant zone
   
   @param parentUrl
   @param id
   @param newDefaultZoneId
   @param expireItems
 */
- (SFApiQuery *)deleteTenantsWithParentUrl:(NSURL *)parentUrl id:(NSString *)Id newDefaultZoneId:(NSString *)newDefaultZoneId andExpireItems:(NSNumber *)expireItems;

/**
   @abstract Get Zone Metadata
   Gets metadata associated with the specified zone
   @param id
   @return the zone metadata feed
 */
- (SFApiQuery *)getMetadataWithUrl:(NSURL *)url;

/**
   @abstract Create or update Zone Metadata
   @description
   [
   {"Name":"metadataName1", "Value":"metadataValue1", "IsPublic":"true"},
   {"Name":"metadataName2", "Value":"metadataValue2", "IsPublic":"false"},
   ...
   ]
   Creates or updates Metadata entries associated with the specified zone
   @param id
   @param metadata
   @return the zone metadata feed
 */
- (SFApiQuery *)createMetadataWithUrl:(NSURL *)url andMetadata:(NSArray *)metadata;

/**
   @abstract Delete Zone Metadata
   Delete the Metadata entry associated with the specified zone
   @param id
   @param name
   @return no data on success
 */
- (SFApiQuery *)deleteMetadataWithUrl:(NSURL *)url andName:(NSString *)name;
@end
