//
//  SFIItemsEntity.m
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFIHttpMethodConstants.h"
#import "SFIEntityConstants.h"
#import "SFIItemsEntity.h"
#import "SFIODataEntityBase.h"
#import "SFIItem.h"
#import "SFIItemInfo.h"
#import "SFIFolder.h"
#import "SFINote.h"
#import "SFILink.h"
#import "SFISymbolicLink.h"
#import "SFIUploadSpecification.h"
#import "SFIUploadRequestParams.h"
#import "SFISearchResults.h"
#import "SFISimpleSearchQuery.h"
#import "SFIAdvancedSearchResults.h"
#import "SFISearchQuery.h"
#import "SFIRedirection.h"
#import "SFIItemProtocolLink.h"


@implementation SFIItemsEntity
-(SFApiQuery*)get
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getWithUrl:(NSURL*)url andIncludeDeleted:(NSNumber*)includeDeleted
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"includeDeleted" withValue:includeDeleted];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getWithUrl:(NSURL*)url treeMode:(NSString*)treeMode sourceId:(NSString*)sourceId canCreateRootFolder:(NSNumber*)canCreateRootFolder andFileBox:(NSNumber*)fileBox
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"treeMode" withValue:treeMode];
	[sfApiQuery addQueryString:@"sourceId" withValue:sourceId];
	[sfApiQuery addQueryString:@"canCreateRootFolder" withValue:canCreateRootFolder];
	[sfApiQuery addQueryString:@"fileBox" withValue:fileBox];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getChildrenByConnectorGroupWithParentUrl:(NSURL*)parentUrl
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_ConnectorGroups];
	[sfApiQuery setAction:@"Children"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)streamWithUrl:(NSURL*)url andIncludeDeleted:(NSNumber*)includeDeleted
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Stream"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"includeDeleted" withValue:includeDeleted];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)byPathWithPath:(NSString*)path
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"ByPath"];
	[sfApiQuery addQueryString:@"path" withValue:path];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)byPathWithUrl:(NSURL*)url andPath:(NSString*)path
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"ByPath"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"path" withValue:path];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getParentWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Parent"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getChildrenWithUrl:(NSURL*)url includeDeleted:(NSNumber*)includeDeleted andOrderingMode:(NSString*)orderingMode
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Children"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"includeDeleted" withValue:includeDeleted];
	[sfApiQuery addQueryString:@"orderingMode" withValue:orderingMode];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getInfoWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItemInfo class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Info"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)downloadWithUrl:(NSURL*)url redirect:(NSNumber*)redirect andIncludeAllVersions:(NSNumber*)includeAllVersions
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Download"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"redirect" withValue:redirect];
	[sfApiQuery addQueryString:@"includeAllVersions" withValue:includeAllVersions];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)bulkDownloadWithParentUrl:(NSURL*)parentUrl ids:(NSArray*)ids andRedirect:(NSNumber*)redirect
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"BulkDownload"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery addQueryString:@"redirect" withValue:redirect];
	[sfApiQuery setBody:ids];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)createFolderWithParentUrl:(NSURL*)parentUrl folder:(SFIFolder*)folder overwrite:(NSNumber*)overwrite andPassthrough:(NSNumber*)passthrough
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIFolder class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Folder"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery addQueryString:@"overwrite" withValue:overwrite];
	[sfApiQuery addQueryString:@"passthrough" withValue:passthrough];
	[sfApiQuery setBody:folder];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)createNoteWithParentUrl:(NSURL*)parentUrl andNote:(SFINote*)note
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFINote class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Note"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery setBody:note];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)createLinkWithParentUrl:(NSURL*)parentUrl andLink:(SFILink*)link
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFILink class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Link"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery setBody:link];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)createSymbolicLinkWithParentUrl:(NSURL*)parentUrl symlink:(SFISymbolicLink*)symlink andOverwrite:(NSNumber*)overwrite
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFISymbolicLink class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"SymbolicLink"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery addQueryString:@"overwrite" withValue:overwrite];
	[sfApiQuery setBody:symlink];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)createChildrenByConnectorGroupWithUrl:(NSURL*)url symlink:(SFISymbolicLink*)symlink andOverwrite:(NSNumber*)overwrite
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFISymbolicLink class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_ConnectorGroups];
	[sfApiQuery setAction:@"Children"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"overwrite" withValue:overwrite];
	[sfApiQuery setBody:symlink];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)updateWithUrl:(NSURL*)url item:(SFIItem*)item batchid:(NSString*)batchid batchSizeInBytes:(NSNumber*)batchSizeInBytes forceSync:(NSNumber*)forceSync scheduleAsync:(NSNumber*)scheduleAsync resolveFolderNameConflict:(NSNumber*)resolveFolderNameConflict andNotify:(NSNumber*)notify
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"batchid" withValue:batchid];
	[sfApiQuery addQueryString:@"batchSizeInBytes" withValue:batchSizeInBytes];
	[sfApiQuery addQueryString:@"forceSync" withValue:forceSync];
	[sfApiQuery addQueryString:@"scheduleAsync" withValue:scheduleAsync];
	[sfApiQuery addQueryString:@"resolveFolderNameConflict" withValue:resolveFolderNameConflict];
	[sfApiQuery addQueryString:@"notify" withValue:notify];
	[sfApiQuery setBody:item];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)updateLinkWithId:(NSString*)Id link:(SFILink*)link andNotify:(NSNumber*)notify
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFILink class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Link"];
	[sfApiQuery addActionIds:Id];
	[sfApiQuery addQueryString:@"notify" withValue:notify];
	[sfApiQuery setBody:link];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)updateNoteWithId:(NSString*)Id note:(SFINote*)note andNotify:(NSNumber*)notify
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFINote class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Note"];
	[sfApiQuery addActionIds:Id];
	[sfApiQuery addQueryString:@"notify" withValue:notify];
	[sfApiQuery setBody:note];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)updateSymbolicLinkWithId:(NSString*)Id andSymlink:(SFISymbolicLink*)symlink
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFISymbolicLink class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"SymbolicLink"];
	[sfApiQuery addActionIds:Id];
	[sfApiQuery setBody:symlink];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)deleteWithUrl:(NSURL*)url singleversion:(NSNumber*)singleversion andForceSync:(NSNumber*)forceSync
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"singleversion" withValue:singleversion];
	[sfApiQuery addQueryString:@"forceSync" withValue:forceSync];
	[sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
	return sfApiQuery;
}

-(SFApiQuery*)bulkDeleteWithParentUrl:(NSURL*)parentUrl ids:(NSArray*)ids forceSync:(NSNumber*)forceSync andDeletePermanently:(NSNumber*)deletePermanently
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"BulkDelete"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery addQueryString:@"forceSync" withValue:forceSync];
	[sfApiQuery addQueryString:@"deletePermanently" withValue:deletePermanently];
	[sfApiQuery setBody:ids];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)getThumbnailWithUrl:(NSURL*)url size:(NSNumber*)size andRedirect:(NSNumber*)redirect
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Thumbnail"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"size" withValue:size];
	[sfApiQuery addQueryString:@"redirect" withValue:redirect];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getBreadcrumbsWithUrl:(NSURL*)url andPath:(NSString*)path
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Breadcrumbs"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"path" withValue:path];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)copyWithUrl:(NSURL*)url targetid:(NSString*)targetid andOverwrite:(NSNumber*)overwrite
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Copy"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"targetid" withValue:targetid];
	[sfApiQuery addQueryString:@"overwrite" withValue:overwrite];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)uploadWithUrl:(NSURL*)url method:(NSString*)method raw:(NSNumber*)raw fileName:(NSString*)fileName fileSize:(NSNumber*)fileSize batchId:(NSString*)batchId batchLast:(NSNumber*)batchLast canResume:(NSNumber*)canResume startOver:(NSNumber*)startOver unzip:(NSNumber*)unzip tool:(NSString*)tool overwrite:(NSNumber*)overwrite title:(NSString*)title details:(NSString*)details isSend:(NSNumber*)isSend sendGuid:(NSString*)sendGuid opid:(NSString*)opid threadCount:(NSNumber*)threadCount responseFormat:(NSString*)responseFormat notify:(NSNumber*)notify clientCreatedDateUTC:(NSDate*)clientCreatedDateUTC clientModifiedDateUTC:(NSDate*)clientModifiedDateUTC andExpirationDays:(NSNumber*)expirationDays
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUploadSpecification class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Upload"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"method" withValue:method];
	[sfApiQuery addQueryString:@"raw" withValue:raw];
	[sfApiQuery addQueryString:@"fileName" withValue:fileName];
	[sfApiQuery addQueryString:@"fileSize" withValue:fileSize];
	[sfApiQuery addQueryString:@"batchId" withValue:batchId];
	[sfApiQuery addQueryString:@"batchLast" withValue:batchLast];
	[sfApiQuery addQueryString:@"canResume" withValue:canResume];
	[sfApiQuery addQueryString:@"startOver" withValue:startOver];
	[sfApiQuery addQueryString:@"unzip" withValue:unzip];
	[sfApiQuery addQueryString:@"tool" withValue:tool];
	[sfApiQuery addQueryString:@"overwrite" withValue:overwrite];
	[sfApiQuery addQueryString:@"title" withValue:title];
	[sfApiQuery addQueryString:@"details" withValue:details];
	[sfApiQuery addQueryString:@"isSend" withValue:isSend];
	[sfApiQuery addQueryString:@"sendGuid" withValue:sendGuid];
	[sfApiQuery addQueryString:@"opid" withValue:opid];
	[sfApiQuery addQueryString:@"threadCount" withValue:threadCount];
	[sfApiQuery addQueryString:@"responseFormat" withValue:responseFormat];
	[sfApiQuery addQueryString:@"notify" withValue:notify];
	[sfApiQuery addQueryString:@"clientCreatedDateUTC" withValue:clientCreatedDateUTC];
	[sfApiQuery addQueryString:@"clientModifiedDateUTC" withValue:clientModifiedDateUTC];
	[sfApiQuery addQueryString:@"expirationDays" withValue:expirationDays];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)upload2WithUrl:(NSURL*)url uploadParams:(SFIUploadRequestParams*)uploadParams andExpirationDays:(NSNumber*)expirationDays
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUploadSpecification class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Upload2"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"expirationDays" withValue:expirationDays];
	[sfApiQuery setBody:uploadParams];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)checkInWithUrl:(NSURL*)url andMessage:(NSString*)message
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"CheckIn"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"message" withValue:message];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)checkOutWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"CheckOut"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)discardCheckOutWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"DiscardCheckOut"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)searchWithQuery:(NSString*)query maxResults:(NSNumber*)maxResults skip:(NSNumber*)skip andHomeFolderOnly:(NSNumber*)homeFolderOnly
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFISearchResults class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Search"];
	[sfApiQuery addQueryString:@"query" withValue:query];
	[sfApiQuery addQueryString:@"maxResults" withValue:maxResults];
	[sfApiQuery addQueryString:@"skip" withValue:skip];
	[sfApiQuery addQueryString:@"homeFolderOnly" withValue:homeFolderOnly];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)advancedSimpleSearchWithSimpleSearchQuery:(SFISimpleSearchQuery*)simpleSearchQuery
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIAdvancedSearchResults class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"AdvancedSimpleSearch"];
	[sfApiQuery setBody:simpleSearchQuery];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)advancedSearchWithSearchQuery:(SFISearchQuery*)searchQuery
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIAdvancedSearchResults class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"AdvancedSearch"];
	[sfApiQuery setBody:searchQuery];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)webViewWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRedirection class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"WebView"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getProtocolLinksWithUrl:(NSURL*)url andPlatform:(NSString*)platform
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItemProtocolLink class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"ProtocolLinks"];
	[sfApiQuery addIds:url];
	[sfApiQuery addActionIds:platform];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getRedirectionWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRedirection class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"Redirection"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getDeletedChildrenWithUrl:(NSURL*)url andId:(NSString*)Id
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"DeletedChildren"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"parentid" withValue:Id];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getUserDeletedItemsWithUserid:(NSString*)userid andZone:(NSString*)zone
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"UserDeletedItems"];
	[sfApiQuery addQueryString:@"userid" withValue:userid];
	[sfApiQuery addQueryString:@"zone" withValue:zone];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)bulkRestoreWithIds:(NSArray*)ids
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"BulkRestore"];
	[sfApiQuery setBody:ids];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)bulkDeletePermanentlyWithIds:(NSArray*)ids
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"BulkDeletePermanently"];
	[sfApiQuery setBody:ids];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)webAppLinkWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRedirection class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"WebAppLink"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)removeTemplateAssociationWithUrl:(NSURL*)url andId:(NSString*)Id
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"RemoveTemplateAssociation"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"parentid" withValue:Id];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)checkTemplateOwnedWithUrl:(NSURL*)url andId:(NSString*)Id
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"CheckTemplateOwned"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"parentid" withValue:Id];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)checkVersioningViolationWithUrl:(NSURL*)url id:(NSString*)Id andNewMaxVersions:(NSNumber*)newMaxVersions
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Items];
	[sfApiQuery setAction:@"CheckVersioningViolation"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"parentid" withValue:Id];
	[sfApiQuery addQueryString:@"newMaxVersions" withValue:newMaxVersions];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

@end
