//
//  SFIUsersEntity.m
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFIHttpMethodConstants.h"
#import "SFIEntityConstants.h"
#import "SFIUsersEntity.h"
#import "SFIODataEntityBase.h"
#import "SFIUser.h"
#import "SFIAccountUser.h"
#import "SFIItem.h"
#import "SFIUserPreferences.h"
#import "SFIUserSecurity.h"
#import "SFIODataObject.h"
#import "SFIUserConfirmationSettings.h"
#import "SFIUserInfo.h"
#import "SFIRedirection.h"
#import "SFIInboxMetadata.h"
#import "SFIShare.h"


@implementation SFIUsersEntity
-(SFApiQuery*)getWithId:(NSString*)Id andEmailAddress:(NSString*)emailAddress
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery addQueryString:@"Id" withValue:Id];
	[sfApiQuery addQueryString:@"emailAddress" withValue:emailAddress];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)createWithUser:(SFIUser*)user pushCreatorDefaultSettings:(NSNumber*)pushCreatorDefaultSettings addshared:(NSNumber*)addshared notify:(NSNumber*)notify ifNecessary:(NSNumber*)ifNecessary andAddPersonal:(NSNumber*)addPersonal
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery addQueryString:@"pushCreatorDefaultSettings" withValue:pushCreatorDefaultSettings];
	[sfApiQuery addQueryString:@"addshared" withValue:addshared];
	[sfApiQuery addQueryString:@"notify" withValue:notify];
	[sfApiQuery addQueryString:@"ifNecessary" withValue:ifNecessary];
	[sfApiQuery addQueryString:@"addPersonal" withValue:addPersonal];
	[sfApiQuery setBody:user];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)createAccountUserWithUser:(SFIAccountUser*)user pushCreatorDefaultSettings:(NSNumber*)pushCreatorDefaultSettings addshared:(NSNumber*)addshared notify:(NSNumber*)notify ifNecessary:(NSNumber*)ifNecessary andAddPersonal:(NSNumber*)addPersonal
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"AccountUser"];
	[sfApiQuery addQueryString:@"pushCreatorDefaultSettings" withValue:pushCreatorDefaultSettings];
	[sfApiQuery addQueryString:@"addshared" withValue:addshared];
	[sfApiQuery addQueryString:@"notify" withValue:notify];
	[sfApiQuery addQueryString:@"ifNecessary" withValue:ifNecessary];
	[sfApiQuery addQueryString:@"addPersonal" withValue:addPersonal];
	[sfApiQuery setBody:user];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)updateWithUrl:(NSURL*)url andUser:(SFIUser*)user
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery addIds:url];
	[sfApiQuery setBody:user];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)updateRolesWithParentUrl:(NSURL*)parentUrl andUser:(SFIUser*)user
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Roles"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery setBody:user];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)patchRolesWithParentUrl:(NSURL*)parentUrl andUser:(SFIUser*)user
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Roles"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery setBody:user];
	[sfApiQuery setHttpMethod:kSFHttpMethodPUT];
	return sfApiQuery;
}

-(SFApiQuery*)removeRolesWithUserUrl:(NSURL*)userUrl andUserRoles:(NSArray*)userRoles
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"RemoveRoles"];
	[sfApiQuery addIds:userUrl];
	[sfApiQuery setBody:userRoles];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)updateAccountUserWithId:(NSString*)Id andUser:(SFIAccountUser*)user
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"AccountUser"];
	[sfApiQuery addActionIds:Id];
	[sfApiQuery setBody:user];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)getHomeFolderWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"HomeFolder"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getTopFoldersWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"TopFolders"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)boxWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Box"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)fileBoxWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"FileBox"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getPreferencesWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUserPreferences class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Preferences"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)updatePreferencesWithParentUrl:(NSURL*)parentUrl andPreferences:(SFIUserPreferences*)preferences
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUserPreferences class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Preferences"];
	[sfApiQuery addIds:parentUrl];
	[sfApiQuery setBody:preferences];
	[sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
	return sfApiQuery;
}

-(SFApiQuery*)getSecurityWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUserSecurity class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Security"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)resetPasswordWithUrl:(NSURL*)url properties:(SFIODataObject*)properties andNotify:(NSNumber*)notify
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"ResetPassword"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"notify" withValue:notify];
	[sfApiQuery setBody:properties];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)forgotPasswordWithEmail:(NSString*)email andResetOnMobile:(NSNumber*)resetOnMobile
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"ForgotPassword"];
	[sfApiQuery addQueryString:@"email" withValue:email];
	[sfApiQuery addQueryString:@"resetOnMobile" withValue:resetOnMobile];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)resendWelcomeWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"ResendWelcome"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)deleteWithUrl:(NSURL*)url andCompletely:(NSNumber*)completely
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"completely" withValue:completely];
	[sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
	return sfApiQuery;
}

-(SFApiQuery*)getAllSharedFolders
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"AllSharedFolders"];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getTopFolders
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"TopFolders"];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)networkShareConnectors
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"NetworkShareConnectors"];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)sharepointConnectors
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIItem class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"SharepointConnectors"];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)confirmWithSettings:(SFIUserConfirmationSettings*)settings
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Confirm"];
	[sfApiQuery setBody:settings];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)getInfo
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUserInfo class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Info"];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)deleteEmailAddressWithEmail:(NSString*)email
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"DeleteEmailAddress"];
	[sfApiQuery addQueryString:@"email" withValue:email];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)makePrimaryWithEmail:(NSString*)email
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIUser class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"MakePrimary"];
	[sfApiQuery addQueryString:@"email" withValue:email];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)sendConfirmationEmailWithEmail:(NSString*)email
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"SendConfirmationEmail"];
	[sfApiQuery addQueryString:@"email" withValue:email];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)webAppLink
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIRedirection class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"WebAppLink"];
	[sfApiQuery setHttpMethod:kSFHttpMethodPOST];
	return sfApiQuery;
}

-(SFApiQuery*)inboxMetadataWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIInboxMetadata class];
	sfApiQuery.isODataFeed = NO;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"InboxMetadata"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)getInboxWithUrl:(NSURL*)url type:(NSString*)type andArchived:(NSNumber*)archived
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIShare class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"Inbox"];
	[sfApiQuery addIds:url];
	[sfApiQuery addQueryString:@"type" withValue:type];
	[sfApiQuery addQueryString:@"archived" withValue:archived];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

-(SFApiQuery*)sentMessagesWithUrl:(NSURL*)url
{
	SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
	sfApiQuery.responseClass = [SFIShare class];
	sfApiQuery.isODataFeed = YES;

	[sfApiQuery setFrom:kSFEntities_Users];
	[sfApiQuery setAction:@"SentMessages"];
	[sfApiQuery addIds:url];
	[sfApiQuery setHttpMethod:kSFHttpMethodGET];
	return sfApiQuery;
}

@end
